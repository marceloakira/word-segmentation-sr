
@article{shishkova_annotated_nodate,
	title = {Annotated {Suffix} {Tree} {Method} for {German} {Compound} {Splitting}},
	author = {Shishkova, Anna and Chernyak, Ekaterina},
	note = {08},
	file = {Shishkova_Chernyak_Annotated Suffix Tree Method for German Compound Splitting.pdf:/home/akira/Zotero/storage/V2LHAIVT/Shishkova_Chernyak_Annotated Suffix Tree Method for German Compound Splitting.pdf:application/pdf}
}

@article{volk_compounds_2015,
	title = {Compounds, {Coreferences} and {Multiword} {Translations}},
	author = {Volk, Martin and Mascarell, Laura and Fishel, Mark},
	year = {2015},
	note = {18},
	file = {Volk et al_Compounds, Coreferences and Multiword Translations.pdf:/home/akira/Zotero/storage/3IUN8SHG/Volk et al_Compounds, Coreferences and Multiword Translations.pdf:application/pdf}
}

@article{ullman_paraphrasing_nodate,
	title = {Paraphrasing of {Swedish} {Compound} {Nouns}},
	author = {Ullman, Edvin},
	note = {52},
	annote = {Artigo tem um complemento (in Machine Learning) e mais um autor..
 },
	file = {Ullman - Paraphrasing of Swedish Compound Nouns.pdf:/home/akira/Zotero/storage/GZFEHG35/Ullman - Paraphrasing of Swedish Compound Nouns.pdf:application/pdf}
}

@article{patel_machine_2019,
	title = {Machine translation in {Indian} languages: {Challenges} and resolution},
	volume = {28},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85053124049&doi=10.1515%2fjisys-2018-0014&partnerID=40&md5=5b1e11decdb5614448ceda0e259a43a4},
	doi = {10.1515/jisys-2018-0014},
	abstract = {English to Indian language machine translation poses the challenge of structural and morphological divergence. This paper describes English to Indian language statistical machine translation using preordering and suffix separation. The preordering uses rules to transfer the structure of the source sentences prior to training and translation. This syntactic restructuring helps statistical machine translation to tackle the structural divergence and hence provides better translation quality. The suffix separation is used to tackle the morphological divergence between English and highly agglutinative Indian languages. We demonstrate that the use of preordering and suffix separation helps in improving the quality of English to Indian language machine translation. © 2019 Walter de Gruyter GmbH, Berlin/Boston.},
	number = {3},
	journal = {Journal of Intelligent Systems},
	author = {Patel, R.N. and Pimpale, P.B. and Sasikumar, M.},
	year = {2019},
	note = {44},
	pages = {437--445},
	annote = {cited By 1},
	file = {Patel et al. - 2019 - Machine translation in Indian languages Challenge.pdf:/home/akira/Zotero/storage/QTIAWNTP/Patel et al. - 2019 - Machine translation in Indian languages Challenge.pdf:application/pdf}
}

@article{altinok_demorphy_2018,
	title = {{DEMorphy}, {German} {Language} {Morphological} {Analyzer}},
	journal = {arXiv preprint arXiv:1803.00902},
	author = {Altinok, Duygu},
	year = {2018},
	note = {23},
	annote = {https://github.com/DuyguA/DEMorphy},
	file = {Altinok - 2018 - DEMorphy, German Language Morphological Analyzer.pdf:/home/akira/Zotero/storage/BY8AMSZI/Altinok - 2018 - DEMorphy, German Language Morphological Analyzer.pdf:application/pdf}
}

@inproceedings{sugisaki_german_2018,
	title = {German compound splitting using the compound productivity of morphemes},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85064207728&partnerID=40&md5=9ad88e6eff661a660d155b41ada1fbb9},
	abstract = {In this work, we present a novel compound splitting method for German by capturing the compound productivity of morphemes. We use a giga web corpus to create a lexicon and decompose noun compounds by computing the probabilities of compound elements as bound and free morphemes. Furthermore, we provide a uniformed evaluation of several unsupervised approaches and morphological analysers for the task. Our method achieved a high F1 score of 0.92, which was a comparable result to state-of-the-art methods. © KONVENS 2018 - Conference on Natural Language Processing / Die Konferenz zur Verarbeitung Naturlicher Sprache.All right reserved.},
	booktitle = {{KONVENS} 2018 - {Conference} on {Natural} {Language} {Processing} / {Die} {Konferenz} zur {Verarbeitung} {Naturlicher} {Sprache}},
	author = {Sugisaki, K. and Tuggener, D.},
	year = {2018},
	note = {32},
	pages = {141--147},
	annote = {cited By 0},
	file = {Sugisaki and Tuggener - 2018 - German compound splitting using the compound produ.pdf:/home/akira/Zotero/storage/9DH3QEFK/Sugisaki and Tuggener - 2018 - German compound splitting using the compound produ.pdf:application/pdf}
}

@inproceedings{li_helpful_2018,
	title = {Helpful or not? an investigation on the feasibility of identifier splitting via {CNN}-{BiLSTM}-{CRF}},
	volume = {2018-July},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85056829823&doi=10.18293%2fSEKE2018-167&partnerID=40&md5=da7e9e1bd5ebdb234108fb0e7e22f2f9},
	doi = {10.18293/SEKE2018-167},
	abstract = {We recently introduced a new technique to handle source code identifier splitting. The proposed technique, denoted as CNN-BiLSTM-CRF[a neural network composed of a convolutional neural network(CNN), bidirectional long short-Term memory networks(BiLSTM) and conditional random fields(CRFs)] enables us to obtain a model that splits identifiers correctly and effectively. This technique combines the use of a CNN layer with the mature BiLSTM-CRF model. The experimental results indicate that CNN-BiLSTM-CRF delivers outstanding performance on all four of the evaluation oracles. More importantly, we endeavored to provide insight into the practical feasibility of this technique by considering the aspects of generality, data size in demand and construction cost, etc. Finally, we reasoned out that CNN-BiLSTM-CRF should be helpful and improvable for identifier splitting in practical works in terms of the accuracy and feasibility. This was validated by multifaceted experiments. Index Terms-identifier splitting, source code mining, program comprehension, CNN, BiLSTM-CRF, feasibility investigation. © 2018 Universitat zu Koln. All rights reserved.},
	booktitle = {Proceedings of the {International} {Conference} on {Software} {Engineering} and {Knowledge} {Engineering}, {SEKE}},
	author = {Li, J. and Du, Q. and Shi, K. and He, Y. and Wang, X. and Xu, J.},
	year = {2018},
	note = {37},
	pages = {175--181},
	annote = {cited By 0},
	file = {2018_Li et al_Helpful or not.pdf:/home/akira/Zotero/storage/28RJQ7B3/2018_Li et al_Helpful or not.pdf:application/pdf}
}

@inproceedings{pinter_investigating_2018,
	title = {Investigating {Word} {Segmentation} {Techniques} for {German} {Using} {Finite}-{State} {Transducers}},
	booktitle = {International {Conference} on {Speech} and {Computer}},
	publisher = {Springer},
	author = {Pintér, Gábor and Schielke, Mira and Petrick, Rico},
	year = {2018},
	note = {39},
	pages = {511--521}
}

@article{hucka_nostril_2018,
	title = {Nostril: {A} nonsense string evaluator written in {Python}.},
	volume = {3},
	number = {25},
	journal = {J. Open Source Software},
	author = {Hucka, Michael},
	year = {2018},
	note = {49},
	pages = {596},
	file = {Hucka - 2018 - Nostril A nonsense string evaluator written in Py.pdf:/home/akira/Zotero/storage/BMFB5JDU/Hucka - 2018 - Nostril A nonsense string evaluator written in Py.pdf:application/pdf}
}

@article{hucka_spiral_2018,
	title = {Spiral: splitters for identifiers in source code files.},
	volume = {3},
	number = {24},
	journal = {J. Open Source Software},
	author = {Hucka, Michael},
	year = {2018},
	note = {66},
	pages = {653},
	file = {Hucka - 2018 - Spiral splitters for identifiers in source code f.pdf:/home/akira/Zotero/storage/99LTJ6MN/Hucka - 2018 - Spiral splitters for identifiers in source code f.pdf:application/pdf}
}

@article{markovtsev_splitting_2018,
	title = {Splitting source code identifiers using {Bidirectional} {LSTM} {Recurrent} {Neural} {Network}},
	journal = {arXiv preprint arXiv:1805.11651},
	author = {Markovtsev, Vadim and Long, Waren and Bulychev, Egor and Keramitas, Romain and Slavnov, Konstantin and Markowski, Gabor},
	year = {2018},
	note = {69},
	file = {Markovtsev et al. - 2018 - Splitting source code identifiers using Bidirectio.pdf:/home/akira/Zotero/storage/5MUZLW7V/Markovtsev et al. - 2018 - Splitting source code identifiers using Bidirectio.pdf:application/pdf}
}

@inproceedings{jagfeld_evaluating_2017,
	title = {Evaluating compound splitters extrinsically with textual entailment},
	volume = {2},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85040556164&doi=10.18653%2fv1%2fP17-2010&partnerID=40&md5=abad0047ea69c94b560a54599233b45f},
	doi = {10.18653/v1/P17-2010},
	abstract = {Traditionally, compound splitters are evaluated intrinsically on gold-standard data or extrinsically on the task of statistical machine translation. We explore a novel way for the extrinsic evaluation of compound splitters, namely recognizing textual entailment. Compound splitting has great potential for this novel task that is both transparent and well-defined. Moreover, we show that it addresses certain aspects that are either ignored in intrinsic evaluations or compensated for by task-internal mechanisms in statistical machine translation. We show significant improvements using different compound splitting methods on a German textual entailment dataset. © 2017 Association for Computational Linguistics.},
	booktitle = {{ACL} 2017 - 55th {Annual} {Meeting} of the {Association} for {Computational} {Linguistics}, {Proceedings} of the {Conference} ({Long} {Papers})},
	author = {Jagfeld, G. and Ziering, P. and Van Der Plas, L.},
	year = {2017},
	note = {29},
	pages = {58--63},
	annote = {cited By 0},
	file = {2017_Jagfeld et al_Evaluating compound splitters extrinsically with textual entailment.pdf:/home/akira/Zotero/storage/ENN8C9AU/2017_Jagfeld et al_Evaluating compound splitters extrinsically with textual entailment.pdf:application/pdf}
}

@inproceedings{weller-di_marco_simple_2017,
	title = {Simple compound splitting for {German}},
	booktitle = {Proceedings of the 13th {Workshop} on {Multiword} {Expressions} ({MWE} 2017)},
	author = {Weller-Di Marco, Marion},
	year = {2017},
	note = {61},
	pages = {161--166},
	file = {Weller-Di Marco - 2017 - Simple compound splitting for German.pdf:/home/akira/Zotero/storage/SIXYHTKM/Weller-Di Marco - 2017 - Simple compound splitting for German.pdf:application/pdf}
}

@inproceedings{fujinuma_substring_2017,
	title = {Substring {Frequency} {Features} for {Segmentation} of {Japanese} {Katakana} {Words} with {Unlabeled} {Corpora}},
	booktitle = {Proceedings of the {Eighth} {International} {Joint} {Conference} on {Natural} {Language} {Processing} ({Volume} 2: {Short} {Papers})},
	author = {Fujinuma, Yoshinari and Grissom II, Alvin},
	year = {2017},
	note = {71},
	pages = {74--79},
	file = {Fujinuma and Grissom II - 2017 - Substring Frequency Features for Segmentation of J.pdf:/home/akira/Zotero/storage/G3ZHDCNT/Fujinuma and Grissom II - 2017 - Substring Frequency Features for Segmentation of J.pdf:application/pdf}
}

@mastersthesis{nordal_cross-lingual_2016,
	title = {Cross-lingual information retrieval using compound word splitting},
	school = {NTNU},
	author = {Nordal, Martin},
	year = {2016},
	note = {20}
}

@inproceedings{rigouts_terryn_dutch_2016,
	title = {Dutch hypernym detection: does decompounding help?},
	booktitle = {Joint {Second} {Workshop} on {Language} and {Ontology} \& {Terminology} and {Knowledge} {Structures} ({LangOnto}2+ {TermiKS})},
	publisher = {European Language Resources Association (ELRA)},
	author = {Rigouts Terryn, Ayla and Macken, Lieve and Lefever, Els},
	year = {2016},
	note = {27},
	pages = {74--78},
	file = {Rigouts Terryn et al. - 2016 - Dutch hypernym detection does decompounding help.pdf:/home/akira/Zotero/storage/ILMSTGEF/Rigouts Terryn et al. - 2016 - Dutch hypernym detection does decompounding help.pdf:application/pdf}
}

@inproceedings{ma_letter_2016,
	title = {Letter sequence labeling for compound splitting},
	booktitle = {Proceedings of the 14th {SIGMORPHON} {Workshop} on {Computational} {Research} in {Phonetics}, {Phonology}, and {Morphology}},
	author = {Ma, Jianqiang and Henrich, Verena and Hinrichs, Erhard},
	year = {2016},
	note = {41},
	pages = {76--81},
	file = {Ma et al. - 2016 - Letter sequence labeling for compound splitting.pdf:/home/akira/Zotero/storage/747WM5IB/Ma et al. - 2016 - Letter sequence labeling for compound splitting.pdf:application/pdf}
}

@article{reuter_segmenting_2016,
	title = {Segmenting twitter hashtags},
	volume = {5},
	journal = {International Journal on Natural Language Computing},
	author = {Reuter, Jack and Pereira-Martins, Jhonata and Kalita, Jugal},
	year = {2016},
	note = {57},
	pages = {23--36},
	file = {Reuter et al. - 2016 - Segmenting twitter hashtags.pdf:/home/akira/Zotero/storage/YHVRZH5D/Reuter et al. - 2016 - Segmenting twitter hashtags.pdf:application/pdf}
}

@inproceedings{shapiro_splitting_2016,
	title = {Splitting compounds with ngrams},
	booktitle = {Proceedings of {COLING} 2016, the 26th {International} {Conference} on {Computational} {Linguistics}: {Technical} {Papers}},
	author = {Shapiro, Naomi Tachikawa},
	year = {2016},
	note = {68},
	pages = {630--640},
	file = {Shapiro - 2016 - Splitting compounds with ngrams.pdf:/home/akira/Zotero/storage/U3VIUJDQ/Shapiro - 2016 - Splitting compounds with ngrams.pdf:application/pdf}
}

@inproceedings{ziering_towards_2016,
	title = {Towards unsupervised and language-independent compound splitting using inflectional morphological transformations},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994128765&partnerID=40&md5=5b0b9b0941575eb4aac9f0edfea61654},
	abstract = {In this paper, we address the task of language-independent, knowledge-lean and unsupervised compound splitting, which is an essential component for many natural language processing tasks such as machine translation. Previous methods on statistical compound splitting either include language-specific knowledge (e.g., linking elements) or rely on parallel data, which results in limited applicability. We aim to overcome these limitations by learning compounding morphology from inflectional information derived from lemmatized monolingual corpora. In experiments for Germanic languages, we show that our approach significantly outperforms language-dependent stateof-the-art methods in finding the correct split point and that word inflection is a good approximation for compounding morphology. ©2016 Association for Computational Linguistics.},
	booktitle = {2016 {Conference} of the {North} {American} {Chapter} of the {Association} for {Computational} {Linguistics}: {Human} {Language} {Technologies}, {NAACL} {HLT} 2016 - {Proceedings} of the {Conference}},
	author = {Ziering, P. and Van Der Plas, L.},
	year = {2016},
	note = {75},
	pages = {644--653},
	annote = {cited By 7},
	file = {Ziering and Van Der Plas - 2016 - Towards unsupervised and language-independent comp.pdf:/home/akira/Zotero/storage/SU3ILLRJ/Ziering and Van Der Plas - 2016 - Towards unsupervised and language-independent comp.pdf:application/pdf}
}

@inproceedings{riedl_unsupervised_2016,
	title = {Unsupervised compound splitting with distributional semantics rivals supervised methods},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994120942&partnerID=40&md5=907e2881fa0d72e3de877cd94f519d2d},
	abstract = {In this paper we present a word decompounding method that is based on distributional semantics. Our method does not require any linguistic knowledge and is initialized using a large monolingual corpus. The core idea of our approach is that parts of compounds (like "candle" and "stick") are semantically similar to the entire compound, which helps to exclude spurious splits (like "candles" and "tick"). We report results for German and Dutch: For German, our unsupervised method comes on par with the performance of a rule-based and a supervised method and significantly outperforms two unsupervised baselines. For Dutch, our method performs only slightly below a rule-based optimized compound splitter. ©2016 Association for Computational Linguistics.},
	booktitle = {2016 {Conference} of the {North} {American} {Chapter} of the {Association} for {Computational} {Linguistics}: {Human} {Language} {Technologies}, {NAACL} {HLT} 2016 - {Proceedings} of the {Conference}},
	author = {Riedl, M. and Biemann, C.},
	year = {2016},
	note = {79},
	pages = {617--622},
	annote = {cited By 8},
	file = {Riedl and Biemann - 2016 - Unsupervised compound splitting with distributiona.pdf:/home/akira/Zotero/storage/8E8LSAW5/Riedl and Biemann - 2016 - Unsupervised compound splitting with distributiona.pdf:application/pdf}
}

@inproceedings{hirschmann_what_2016,
	title = {What makes word-level neural machine translation hard: {A} case study on {English}-{German} translation},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85039147994&partnerID=40&md5=92b1d72c2067f0a3005d477c56d828af},
	abstract = {Traditional machine translation systems often require heavy feature engineering and the combination of multiple techniques for solving different subproblems. In recent years, several end-to-end learning architectures based on recurrent neural networks have been proposed. Unlike traditional systems, Neural Machine Translation (NMT) systems learn the parameters of the model and require only minimal preprocessing. Memory and time constraints allow to take only a fixed number of words into account, which leads to the out-of-vocabulary (OOV) problem. In this work, we analyze why the OOV problem arises and why it is considered a serious problem in German. We study the effectiveness of compound word splitters for alleviating the OOV problem, resulting in a 2.5+ BLEU points improvement over a baseline on the WMT' 14 German-to-English translation task. For English-to-German translation, we use target-side compound splitting through a special syntax during training that allows the model to merge compound words and gain 0.2 BLEU points. © 1963-2018 ACL.},
	booktitle = {{COLING} 2016 - 26th {International} {Conference} on {Computational} {Linguistics}, {Proceedings} of {COLING} 2016: {Technical} {Papers}},
	author = {Hirschmann, F. and Nam, J. and Fürnkranz, J.},
	year = {2016},
	note = {85},
	pages = {3199--3208},
	annote = {cited By 3},
	file = {Hirschmann et al. - 2016 - What makes word-level neural machine translation h.pdf:/home/akira/Zotero/storage/STNZCZKA/Hirschmann et al. - 2016 - What makes word-level neural machine translation h.pdf:application/pdf}
}

@article{escartin_assessing_2015,
	title = {Assessing {WordNet} for bilingual compound dictionary extraction},
	journal = {MULTI-WORD UNITS IN MACHINE TRANSLATION AND TRANSLATION TECHNOLOGIES MUMTTT2015},
	author = {Escartín, Carla Parra and Alonso, Héctor Martínez},
	year = {2015},
	note = {10},
	pages = {19},
	file = {2015_Escartín_Alonso_Assessing WordNet for bilingual compound dictionary extraction.pdf:/home/akira/Zotero/storage/4W8HEFB8/2015_Escartín_Alonso_Assessing WordNet for bilingual compound dictionary extraction.pdf:application/pdf}
}

@article{prestes_extracao_2015,
	title = {Extração multilíngue de termos multipalavra em corpora comparáveis},
	author = {Prestes, Kassius Vargas},
	year = {2015},
	note = {30},
	file = {Prestes - 2015 - Extração multilíngue de termos multipalavra em cor.pdf:/home/akira/Zotero/storage/C3HNWX9X/Prestes - 2015 - Extração multilíngue de termos multipalavra em cor.pdf:application/pdf}
}

@article{carvalho_source_2015,
	title = {From {Source} {Code} {Identifiers} to {Natural} {Language} {Terms}},
	volume = {100},
	issn = {0164-1212},
	url = {http://dx.doi.org/10.1016/j.jss.2014.10.013},
	doi = {10.1016/j.jss.2014.10.013},
	number = {C},
	journal = {J. Syst. Softw.},
	author = {Carvalho, Nuno Ramos and Almeida, José João and Henriques, Pedro Rangel and Varanda, Maria João},
	year = {2015},
	note = {31},
	keywords = {Identifier splitting, Natural language processing, Program comprehension},
	pages = {117--128},
	file = {2015_Carvalho et al_From Source Code Identifiers to Natural Language Terms.pdf:/home/akira/Zotero/storage/Q9EFTF6R/2015_Carvalho et al_From Source Code Identifiers to Natural Language Terms.pdf:application/pdf}
}

@inproceedings{tiedemann_morphological_2015,
	title = {Morphological segmentation and {OPUS} for {Finnish}-{English} machine translation},
	booktitle = {Proceedings of the {Tenth} {Workshop} on {Statistical} {Machine} {Translation}},
	author = {Tiedemann, Jörg and Ginter, Filip and Kanerva, Jenna},
	year = {2015},
	note = {48},
	pages = {177--183},
	file = {Tiedemann et al. - 2015 - Morphological segmentation and OPUS for Finnish-En.pdf:/home/akira/Zotero/storage/SHFYM3JI/Tiedemann et al. - 2015 - Morphological segmentation and OPUS for Finnish-En.pdf:application/pdf}
}

@article{bretschneider_semantic_2015,
	title = {Semantic splitting of {German} medical compounds},
	volume = {9302},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951778429&doi=10.1007%2f978-3-319-24033-6_24&partnerID=40&md5=b80f85ba2c958dce5bb50b1ba2869b01},
	doi = {10.1007/978-3-319-24033-6_24},
	abstract = {Compounding is widespread in highly inflectional languages with a quarter of all nouns created by composition. In our field of study, the German medical language, the amount of compounds significantly outnumbers this figure with 64\%. Thus, their correct splitting is a high-impact preprocessing step for any NLP-based application. In this work we address two challenges of medical decomposition: First, we introduce the consideration of unknown constituents in order to split compounds that were not recognized as such so far. Second, our approach builds on the corpus-based approach of Koehn and Knight and adds semantic knowledge from domain ontologies to increase the accuracy during disambiguation of the various split options. Using this first-of-a-kind semantic approach in a study on decomposition of German medical compounds, we outperform the existing approaches by far. © Springer International Publishing Switzerland 2015.},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	author = {Bretschneider, C. and Zillner, S.},
	year = {2015},
	note = {60},
	pages = {207--215},
	annote = {cited By 0}
}

@article{daiber_splitting_2015,
	title = {Splitting compounds by semantic analogy},
	journal = {arXiv preprint arXiv:1509.04473},
	author = {Daiber, Joachim and Quiroz, Lautaro and Wechsler, Roger and Frank, Stella},
	year = {2015},
	note = {67},
	file = {Daiber et al. - 2015 - Splitting compounds by semantic analogy.pdf:/home/akira/Zotero/storage/6CPNK7HK/Daiber et al. - 2015 - Splitting compounds by semantic analogy.pdf:application/pdf}
}

@article{hellwig_using_2015,
	title = {Using {Recurrent} {Neural} {Networks} for joint compound splitting and {Sandhi} resolution in {Sanskrit}},
	journal = {Proceedings of the 7th LTC},
	author = {Hellwig, Oliver},
	year = {2015},
	note = {81},
	pages = {289--293},
	file = {Hellwig - 2015 - Using Recurrent Neural Networks for joint compound.pdf:/home/akira/Zotero/storage/QYVWPWDD/Hellwig - 2015 - Using Recurrent Neural Networks for joint compound.pdf:application/pdf}
}

@inproceedings{van_huyssteen_taxonomy_2014,
	title = {A {Taxonomy} for {Afrikaans} and {Dutch} compounds},
	booktitle = {Proceedings of the {First} {Workshop} on {Computational} {Approaches} to {Compound} {Analysis} ({ComAComA} 2014)},
	author = {Van Huyssteen, Gerhard and Verhoeven, Ben},
	year = {2014},
	note = {03},
	pages = {31--40},
	file = {2014_Van Huyssteen_Verhoeven_A Taxonomy for Afrikaans and Dutch compounds.pdf:/home/akira/Zotero/storage/ZRGENZYE/2014_Van Huyssteen_Verhoeven_A Taxonomy for Afrikaans and Dutch compounds.pdf:application/pdf}
}

@article{hill_empirical_2014-1,
	title = {An {Empirical} {Study} of {Identifier} {Splitting} {Techniques}},
	volume = {19},
	issn = {1382-3256},
	url = {http://dx.doi.org/10.1007/s10664-013-9261-0},
	doi = {10.1007/s10664-013-9261-0},
	number = {6},
	journal = {Empirical Softw. Engg.},
	author = {Hill, Emily and Binkley, David and Lawrie, Dawn and Pollock, Lori and Vijay-Shanker, K.},
	year = {2014},
	note = {06},
	keywords = {Program comprehension, Identifier names, Software engineering tools, Source code text analysis},
	pages = {1754--1780},
	file = {2014_Hill et al_An Empirical Study of Identifier Splitting Techniques.pdf:/home/akira/Zotero/storage/AWMTSPKF/2014_Hill et al_An Empirical Study of Identifier Splitting Techniques.pdf:application/pdf}
}

@article{guerrouj_experimental_2014,
	title = {An {Experimental} {Investigation} on the {Effects} of {Context} on {Source} {Code} {Identifiers} {Splitting} and {Expansion}},
	volume = {19},
	issn = {1382-3256},
	url = {http://dx.doi.org/10.1007/s10664-013-9260-1},
	doi = {10.1007/s10664-013-9260-1},
	number = {6},
	journal = {Empirical Softw. Engg.},
	author = {Guerrouj, Latifa and Penta, Massimiliano and Guéhéneuc, Yann-Gaël and Antoniol, Giuliano},
	year = {2014},
	note = {07},
	keywords = {Identifier splitting and expansion, Program understanding, Task context},
	pages = {1706--1753},
	file = {2014_Guerrouj et al_An Experimental Investigation on the Effects of Context on Source Code Identifiers Splitting and Expansion.pdf:/home/akira/Zotero/storage/BA4LYM4F/2014_Guerrouj et al_An Experimental Investigation on the Effects of Context on Source Code Identifiers Splitting and Expansion.pdf:application/pdf}
}

@article{kirkedal_automatic_2014,
	title = {Automatic {Phonetic} {Transcription} for {Danish} {Speech} {Recognition}},
	author = {Kirkedal, Andreas Søeborg},
	year = {2014},
	note = {12}
}

@inproceedings{bick_constraint_2014,
	address = {Cham},
	title = {Constraint {Grammar}-{Based} {Swedish}-{Danish} {Machine} {Translation}},
	isbn = {978-3-319-10888-9},
	abstract = {This paper describes and evaluates a grammar-based machine translation system for the Swedish-Danish language pair. Source-language structural analysis, polysemy resolution, syntactic movement rules and target-language agreement are based on Constraint Grammar morphosyntactic tags and dependency trees. Lexical transfer rules exploit dependency links to access contextual information, such as syntactic argument function, semantic type and quantifiers, or to integrate verbal features, e.g. diathesis and auxiliaries. Out-of-vocabulary words are handled by derivational and compound analysis with a combined coverage of 99.3\%, as well as systematic morpho-phonemic transliterations for the remaining cases. The system achieved BLEU scores of 0.65-0.8 depending on references and outperformed both STMT and RBMT competitors by a large margin.},
	booktitle = {Advances in {Natural} {Language} {Processing}},
	publisher = {Springer International Publishing},
	author = {Bick, Eckhard},
	editor = {Przepiórkowski, Adam and Ogrodniczuk, Maciej},
	year = {2014},
	note = {19},
	pages = {216--227},
	file = {2014_Bick_Constraint Grammar-Based Swedish-Danish Machine Translation.pdf:/home/akira/Zotero/storage/V8KTA7ZK/2014_Bick_Constraint Grammar-Based Swedish-Danish Machine Translation.pdf:application/pdf}
}

@inproceedings{brun_decomposing_2014,
	title = {Decomposing {Hashtags} to {Improve} {Tweet} {Polarity} {Classification} ({Décomposition} des Ğ hash tags ğ pour l’amélioration de la classification en polarité des Ğ tweets ğ)[in {French}]},
	booktitle = {Proceedings of {TALN} 2014 ({Volume} 2: {Short} {Papers})},
	author = {Brun, Caroline and Roux, Claude},
	year = {2014},
	note = {22},
	pages = {473--478},
	file = {Brun and Roux - 2014 - Decomposing Hashtags to Improve Tweet Polarity Cla.pdf:/home/akira/Zotero/storage/TZ383J7W/Brun and Roux - 2014 - Decomposing Hashtags to Improve Tweet Polarity Cla.pdf:application/pdf}
}

@inproceedings{weller_distinguishing_2014,
	title = {Distinguishing degrees of compositionality in compound splitting for statistical machine translation},
	booktitle = {Proceedings of the {First} {Workshop} on {Computational} {Approaches} to {Compound} {Analysis} ({ComAComA} 2014)},
	author = {Weller, Marion and Cap, Fabienne and Müller, Stefan and im Walde, Sabine Schulte and Fraser, Alexander},
	year = {2014},
	note = {26},
	pages = {81--90},
	file = {Weller et al. - 2014 - Distinguishing degrees of compositionality in comp.pdf:/home/akira/Zotero/storage/3XCJKMY9/Weller et al. - 2014 - Distinguishing degrees of compositionality in comp.pdf:application/pdf}
}

@inproceedings{escartin_german_2014,
	title = {German {Compounds} and {Statistical} {Machine} {Translation}. {Can} they get along?},
	booktitle = {Proceedings of the 10th {Workshop} on {Multiword} {Expressions} ({MWE})},
	author = {Escartín, Carla Parra and Peitz, Stephan and Ney, Hermann},
	year = {2014},
	note = {33},
	pages = {48--56},
	file = {Escartín et al. - 2014 - German Compounds and Statistical Machine Translati.pdf:/home/akira/Zotero/storage/JJYPSB2C/Escartín et al. - 2014 - German Compounds and Statistical Machine Translati.pdf:application/pdf}
}

@inproceedings{fishel_handling_2014,
	title = {Handling technical {OOVs} in {SMT}},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85000716797&partnerID=40&md5=3634713662e062110d558fbc30f94db4},
	abstract = {We present a project on machine translation of software help desk tickets, a highly technical text domain. The main source of translation errors were out-of-vocabulary tokens (OOVs), most of which were either in-domain German compounds or technical token sequences that must be preserved verbatim in the output. We describe our efforts on compound splitting and treatment of non-translatable tokens, which lead to a significant translation quality gain. © 2014 The authors.},
	booktitle = {Proceedings of the 17th {Annual} {Conference} of the {European} {Association} for {Machine} {Translation}, {EAMT} 2014},
	author = {Fishel, M. and Sennrich, R.},
	year = {2014},
	note = {36},
	pages = {159--162},
	annote = {cited By 0},
	file = {Fishel and Sennrich - 2014 - Handling technical OOVs in SMT.pdf:/home/akira/Zotero/storage/4LLQZCAQ/Fishel and Sennrich - 2014 - Handling technical OOVs in SMT.pdf:application/pdf}
}

@article{ablimit_lexicon_2014,
	title = {Lexicon optimization based on discriminative learning for automatic speech recognition of agglutinative language},
	volume = {60},
	journal = {Speech communication},
	author = {Ablimit, Mijit and Kawahara, Tatsuya and Hamdulla, Askar},
	year = {2014},
	note = {42},
	pages = {78--87},
	file = {Ablimit et al. - 2014 - Lexicon optimization based on discriminative learn.pdf:/home/akira/Zotero/storage/RN3QYC5F/Ablimit et al. - 2014 - Lexicon optimization based on discriminative learn.pdf:application/pdf}
}

@article{verhoeven_proceedings_2014,
	title = {Proceedings of the {First} {Workshop} on {Computational} {Approaches} to {Compound} {Analysis} held at the 25th {International} {Conference} on {Computational} {Linguistics} ({COLING} 2014)},
	author = {Verhoeven, Ben and Daelemans, Walter and van Zaanen, Menno and van Huyssteen, Gerhard},
	year = {2014},
	note = {53},
	file = {Verhoeven et al. - 2014 - Proceedings of the First Workshop on Computational.pdf:/home/akira/Zotero/storage/IJGCDCNF/Verhoeven et al. - 2014 - Proceedings of the First Workshop on Computational.pdf:application/pdf}
}

@article{wolk_real-time_2014,
	title = {Real-time statistical speech translation},
	volume = {275 AISC},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904602811&doi=10.1007%2f978-3-319-05951-8_11&partnerID=40&md5=d9d3d16efc7102d26081575e8d464b8b},
	doi = {10.1007/978-3-319-05951-8_11},
	abstract = {This research investigates the Statistical Machine Translation approaches to translate speech in real time automatically. Such systems can be used in a pipeline with speech recognition and synthesis software in order to produce a real-time voice communication system between foreigners. We obtained three main data sets from spoken proceedings that represent three different types of human speech. TED, Europarl, and OPUS parallel text corpora were used as the basis for training of language models, for developmental tuning and testing of the translation system. We also conducted experiments involving part of speech tagging, compound splitting, linear language model interpolation, TrueCasing and morphosyntactic analysis. We evaluated the effects of variety of data preparations on the translation results using the BLEU, NIST, METEOR and TER metrics and tried to give answer which metric is most suitable for PL-EN language pair. © Springer International Publishing Switzerland 2014.},
	number = {VOLUME 1},
	journal = {Advances in Intelligent Systems and Computing},
	author = {Wołk, K. and Marasek, K.},
	year = {2014},
	note = {55},
	pages = {107--113},
	annote = {cited By 8},
	file = {Wołk and Marasek - 2014 - Real-time statistical speech translation.pdf:/home/akira/Zotero/storage/4IGT7AK8/Wołk and Marasek - 2014 - Real-time statistical speech translation.pdf:application/pdf}
}

@phdthesis{leidig_single_2014,
	type = {{PhD} {Thesis}},
	title = {Single and {Combined} {Features} for the {Detection} of {Anglicisms} in {German} and {Afrikaans}},
	school = {Bachelor’s Thesis, Karlsruhe Institute of Technology},
	author = {Leidig, Sebastian and Schlippe, Dipl-Inform Tim and Schultz, Ing Tanja},
	year = {2014},
	note = {62},
	file = {Leidig et al. - 2014 - Single and Combined Features for the Detection of .pdf:/home/akira/Zotero/storage/PWZ8XMTL/Leidig et al. - 2014 - Single and Combined Features for the Detection of .pdf:application/pdf}
}

@inproceedings{pimpale_smt_2014,
	title = {{SMT} from {Agglutinative} {Languages}: {Use} of {Suffix} {Separation} and {Word} {Splitting}},
	booktitle = {Proceedings of the 11th {International} {Conference} on {Natural} {Language} {Processing}},
	author = {Pimpale, Prakash B and Patel, Raj Nath and Sasikumar, M},
	year = {2014},
	note = {63},
	pages = {2--10},
	file = {Pimpale et al. - 2014 - SMT from Agglutinative Languages Use of Suffix Se.pdf:/home/akira/Zotero/storage/IJ8L8R4T/Pimpale et al. - 2014 - SMT from Agglutinative Languages Use of Suffix Se.pdf:application/pdf}
}

@inproceedings{junczys-dowmunt_smt_2014,
	title = {{SMT} of {German} {Patents} at {WIPO}: {Decompounding} and {Verb} {Structure} {Pre}-reordering},
	booktitle = {Proceedings of the 17th {Annual} {Conference} of the {European} {Association} for {Machine} {Translation} ({EAMT}2014)},
	author = {Junczys-Dowmunt, Marcin and Pouliquen, Bruno},
	year = {2014},
	note = {64},
	pages = {217--220},
	file = {Junczys-Dowmunt and Pouliquen - 2014 - SMT of German Patents at WIPO Decompounding and V.pdf:/home/akira/Zotero/storage/LU44R53C/Junczys-Dowmunt and Pouliquen - 2014 - SMT of German Patents at WIPO Decompounding and V.pdf:application/pdf}
}

@inproceedings{santos_using_2014,
	title = {Using compound lists for german decompounding in a back-off scenario},
	booktitle = {Workshop on {Computational}, {Cognitive}, and {Linguistic} {Approaches} to the {Analysis} of {Complex} {Words} and {Collocations} ({CCLCC} 2014)},
	author = {Santos, Pedro Bispo},
	year = {2014},
	note = {80},
	pages = {51--55},
	file = {Santos - 2014 - Using compound lists for german decompounding in a.pdf:/home/akira/Zotero/storage/WTA926Y6/Santos - 2014 - Using compound lists for german decompounding in a.pdf:application/pdf}
}

@inproceedings{owczarzak_wordsyoudontknow_2014,
	title = {Wordsyoudontknow: {Evaluation} of lexicon-based decompounding with unknown handling},
	booktitle = {Proceedings of the {First} {Workshop} on {Computational} {Approaches} to {Compound} {Analysis} ({ComAComA} 2014)},
	author = {Owczarzak, Karolina and de Haan, Ferdinand and Krupka, George and Hindle, Don},
	year = {2014},
	note = {87},
	pages = {63--71},
	file = {Owczarzak et al. - 2014 - Wordsyoudontknow Evaluation of lexicon-based deco.pdf:/home/akira/Zotero/storage/XRHBA9RL/Owczarzak et al. - 2014 - Wordsyoudontknow Evaluation of lexicon-based deco.pdf:application/pdf}
}

@inproceedings{ganguly_case_2013,
	address = {Berlin, Heidelberg},
	title = {A {Case} {Study} in {Decompounding} for {Bengali} {Information} {Retrieval}},
	isbn = {978-3-642-40802-1},
	abstract = {Decompounding has been found to improve information retrieval (IR) effectiveness for compounding languages such as Dutch, German, or Finnish. No previous studies, however, exist on the effect of decomposition of compounds in IR for Indian languages. In this case study, we investigate the effect of decompounding for Bengali, a highly agglutinative Indian language. The standard approach of decompounding for IR, i.e. indexing compound parts (constituents) in addition to compound words, has proven beneficial for European languages. Our experiments reported in this paper show that such a standard approach does not work particularly well for Bengali IR. Some unique characteristics of Bengali compounds are: i) only one compound constituent may be a valid word in contrast to the stricter requirement of both being so; and ii) the first character of the right constituent can be modified by the rules of Sandhi in contrast to simple concatenation. As a solution, we firstly propose a more relaxed decompounding where a compound word is decomposed into only one constituent if the other constituent is not a valid word, and secondly we perform selective decompounding by ensuring that constituents often co-occur with the compound word, which indicates how related the constituents and the compound are. We perform experiments on Bengali ad-hoc IR collections from FIRE 2008 to 2012. Our experiments show that both the relaxed decomposition and the co-occurrence-based constituent selection proves more effective than the standard frequency-based decomposition method, improving mean average precision (MAP) up to 2.72\% and recall up to 1.8\%, compared to not decompounding words.},
	booktitle = {Information {Access} {Evaluation}. {Multilinguality}, {Multimodality}, and {Visualization}},
	publisher = {Springer Berlin Heidelberg},
	author = {Ganguly, Debasis and Leveling, Johannes and Jones, Gareth J. F.},
	editor = {Forner, Pamela and Müller, Henning and Paredes, Roberto and Rosso, Paolo and Stein, Benno},
	year = {2013},
	note = {01},
	pages = {108--119},
	annote = {cited by 5
 },
	file = {2013_Ganguly et al_A Case Study in Decompounding for Bengali Information Retrieval.pdf:/home/akira/Zotero/storage/79DGE4TB/2013_Ganguly et al_A Case Study in Decompounding for Bengali Information Retrieval.pdf:application/pdf}
}

@article{kpodjedo_madmatch_2013,
	title = {Madmatch: {Many}-to-many approximate diagram matching for design comparison},
	volume = {39},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84881038069&doi=10.1109%2fTSE.2013.9&partnerID=40&md5=9a548cfb32b924a02c660b079f2e1e6b},
	doi = {10.1109/TSE.2013.9},
	abstract = {Matching algorithms play a fundamental role in many important but difficult software engineering activities, especially design evolution analysis and model comparison. We present MADMatch, a fast and scalable many-to-many approximate diagram matching approach based on an error-tolerant graph matching (ETGM) formulation. Diagrams are represented as graphs, costs are assigned to possible differences between two given graphs, and the goal is to retrieve the cheapest matching. We address the resulting optimization problem with a tabu search enhanced by the novel use of lexical and structural information. Through several case studies with different types of diagrams and tasks, we show that our generic approach obtains better results than dedicated state-of-the-art algorithms, such as AURA, PLTSDiff, or UMLDiff, on the exact same datasets used to introduce (and evaluate) these algorithms. © 1976-2012 IEEE.},
	number = {8},
	journal = {IEEE Transactions on Software Engineering},
	author = {Kpodjedo, S. and Ricca, F. and Galinier, P. and Antoniol, G. and Gueheneuc, Y.-G.},
	year = {2013},
	note = {45},
	pages = {1090--1111},
	annote = {cited By 13},
	file = {2013_Kpodjedo et al_Madmatch.pdf:/home/akira/Zotero/storage/QQRW8NHR/2013_Kpodjedo et al_Madmatch.pdf:application/pdf}
}

@article{guerrouj_tidier_2013,
	title = {{TIDIER}: {An} identifier splitting approach using speech recognition techniques},
	volume = {25},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883654687&doi=10.1002%2fsmr.539&partnerID=40&md5=79227717373f850527ad7601246a17bb},
	doi = {10.1002/smr.539},
	abstract = {The software engineering literature reports empirical evidence on the relation between various characteristics of a software system and its quality. Among other factors, recent studies have shown that a proper choice of identifiers influences understandability and maintainability. Indeed, identifiers are developers' main source of information and guide their cognitive processes during program comprehension when high-level documentation is scarce or outdated and when source code is not sufficiently commented. This paper proposes a novel approach to recognize words composing source code identifiers. The approach is based on an adaptation of Dynamic Time Warping used to recognize words in continuous speech. The approach overcomes the limitations of existing identifier-splitting approaches when naming conventions (e.g., Camel Case) are not used or when identifiers contain abbreviations. We apply the approach on a sample of more than 1000 identifiers extracted from 340 C programs and compare its results with a simple Camel Case splitter and with an implementation of an alternative identifier splitting approach, Samurai. Results indicate the capability of the novel approach: (i) to outperform the alternative ones, when using a dictionary augmented with domain knowledge or a contextual dictionary and (ii) to expand 48\% of a set of selected abbreviations into dictionary words. Copyright © 2011 John Wiley \& Sons, Ltd.},
	number = {6},
	journal = {Journal of software: Evolution and Process},
	author = {Guerrouj, L. and Di Penta, M. and Antoniol, G. and Guéh́eneuc, Y.-G.},
	year = {2013},
	note = {74},
	pages = {575--599},
	annote = {cited By 21},
	file = {Guerrouj et al. - 2013 - TIDIER An identifier splitting approach using spe.pdf:/home/akira/Zotero/storage/SL7YMR5A/Guerrouj et al. - 2013 - TIDIER An identifier splitting approach using spe.pdf:application/pdf}
}

@inproceedings{corazza_linsen_2012,
	title = {{LINSEN}: {An} efficient approach to split identifiers and expand abbreviations},
	doi = {10.1109/ICSM.2012.6405277},
	abstract = {Information Retrieval (IR) techniques are being exploited by an increasing number of tools supporting Software Maintenance activities. Indeed the lexical information embedded in the source code can be valuable for tasks such as concept location, clustering or recovery of traceability links. The application of such IR-based techniques relies on the consistency of the lexicon available in the different artifacts, and their effectiveness can worsen if programmers introduce abbreviations (e.g: rect) and/or do not strictly follow naming conventions such as Camel Case (e.g: UTFtoASCII). In this paper we propose an approach to automatically split identifiers in their composing words, and expand abbreviations. The solution is based on a graph model and performs in linear time with respect to the size of the dictionary, taking advantage of an approximate string matching technique. The proposed technique exploits a number of different dictionaries, referring to increasingly broader contexts, in order to achieve a disambiguation strategy based on the knowledge gathered from the most appropriate domain. The approach has been compared to other splitting and expansion techniques, using freely available oracles for the identifiers extracted from 24 C/C++ and Java open source systems. Results show an improvement in both splitting and expanding performance, in addition to a strong enhancement in the computational efficiency.},
	booktitle = {2012 28th {IEEE} {International} {Conference} on {Software} {Maintenance} ({ICSM})},
	author = {Corazza, A. and Martino, S. Di and Maggio, V.},
	month = sep,
	year = {2012},
	note = {43},
	keywords = {Context, information retrieval, abbreviation expansion, approximate string matching technique, Approximation algorithms, C-C++, C++ language, camel case, concept location, Conferences, Dictionaries, dictionary, disambiguation strategy, Expansion, identifier splitting, information retrieval techniques, IR-based techniques, Java, Java open source systems, lexical information, LINSEN, oracles, pattern clustering, Program Comprehension, public domain software, Software algorithms, software maintenance, Software maintenance, software maintenance activities, Source Code Identifiers, Splitting, traceability links clustering, traceability links recovery},
	pages = {233--242},
	file = {Corazza et al. - 2012 - LINSEN An efficient approach to split identifiers.pdf:/home/akira/Zotero/storage/CLTIYFUB/Corazza et al. - 2012 - LINSEN An efficient approach to split identifiers.pdf:application/pdf}
}

@inproceedings{srinivasan_segmenting_2012,
	title = {Segmenting web-domains and hashtags using length specific models},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84871061019&doi=10.1145%2f2396761.2398410&partnerID=40&md5=4a4ef08843f61ac76f3dbc0b0b0a71a5},
	doi = {10.1145/2396761.2398410},
	abstract = {Segmentation of a string of English language characters into a sequence of words has many applications. Here, we study two applications in the internet domain. First application is the web domain segmentation which is crucial for monetization of broken URLs. Secondly, we propose and study a novel application of twitter hashtag segmentation for increasing recall on twitter searches. Existing methods for word segmentation use unsupervised language models. We find that when using multiple corpora, the joint probability model from multiple corpora performs significantly better than the individual corpora. Motivated by this, we propose weighted joint probability model, with weights specific to each corpus. We propose to train the weights in a supervised manner using max-margin methods. The supervised probability models improve segmentation accuracy over joint probability models. Finally, we observe that length of segments is an important parameter for word segmentation, and incorporate length-specific weights into our model. The length specific models further improve segmentation accuracy over supervised probability models. For all models proposed here, inference problem can be solved using the dynamic programming algorithm. We test our methods on five different datasets, two from web domains data, and three from news headlines data from an LDC dataset. The supervised length specific models show significant improvements over unsupervised single corpus and joint probability models. Cross-testing between the datasets confirm that supervised probability models trained on all datasets, and length specific models trained on news headlines data, generalize well. Segmentation of hashtags result in significant improvement in recall on searches for twitter trends. © 2012 ACM.},
	booktitle = {{ACM} {International} {Conference} {Proceeding} {Series}},
	author = {Srinivasan, S. and Bhattacharya, S. and Chakraborty, R.},
	year = {2012},
	note = {58},
	pages = {1113--1122},
	annote = {cited By 13},
	file = {Srinivasan et al. - 2012 - Segmenting web-domains and hashtags using length s.pdf:/home/akira/Zotero/storage/HLUIP69X/Srinivasan et al. - 2012 - Segmenting web-domains and hashtags using length s.pdf:application/pdf}
}

@inproceedings{sureka_source_2012,
	title = {Source code identifier splitting using yahoo image and web search engine},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869760971&doi=10.1145%2f2384416.2384417&partnerID=40&md5=042160e97cea76d60ed1709ec697fb7f},
	doi = {10.1145/2384416.2384417},
	abstract = {Source-code or program identifiers are sequence of characters consisting of one or more tokens representing domain concepts. Splitting or tokenizing identifiers that does not contain explicit markers or clues such as came-casing or using underscore as a token separatoris a technically challenging problem. In this paper, we present a technique for automatic tokenization and splitting of source-code identifiers using Yahoo web search and image search similarity distance. We present an algorithm that decides the split position based on various factors such as conceptual correlations and semantic relatedness between the left and right splits strings of a given identifier, popularity of the token and its length. The number of hits or search results returned by the web and image search engine serves as a proxy to measures such as term popularity and correlation. We perform a series of experiments to validate the proposed approach and present performance results.},
	booktitle = {Proceedings of the {ACM} {SIGKDD} {International} {Conference} on {Knowledge} {Discovery} and {Data} {Mining}},
	author = {Sureka, A.},
	year = {2012},
	note = {65},
	pages = {1--8},
	annote = {cited By 1},
	file = {2012_Sureka_Source code identifier splitting using yahoo image and web search engine.pdf:/home/akira/Zotero/storage/8NJVVA7U/2012_Sureka_Source code identifier splitting using yahoo image and web search engine.pdf:application/pdf}
}

@inproceedings{biggers_effects_2012,
	title = {The effects of identifier retention and stop word removal on a latent {Dirichlet} allocation based feature location technique},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862667183&doi=10.1145%2f2184512.2184551&partnerID=40&md5=596eddec20f80762f4b8b0c7f84166e1},
	doi = {10.1145/2184512.2184551},
	abstract = {Feature location, an important task in program comprehension, occurs when the developer identifies the source code entity or entities responsible for implementing a functionality. Researchers have applied static analysis techniques to multiple software maintenance tasks, including feature localization. Static analysis techniques operate on a document corpus. Configuration and preprocessing decisions are required to build a suitable source code corpus for a static analysis technique. Currently, there is little guidance in the software engineering literature for making such configuration decisions. This paper focuses on two preprocessing methods for source code corpora, identifier splitting and stop word lists. We experiment on three open source Java test suites, i.e. Mylyn 1.0.1, Rhino 1.5R5, and Rhino 1.6R5. Our results indicate that identifier splitting and stop word list decisions do not significantly affect the performance of the LDA based feature location technique. © 2012 ACM.},
	booktitle = {Proceedings of the {Annual} {Southeast} {Conference}},
	author = {Biggers, L.R.},
	year = {2012},
	note = {72},
	pages = {164--169},
	annote = {cited By 1},
	file = {Biggers - 2012 - The effects of identifier retention and stop word .pdf:/home/akira/Zotero/storage/HATKDGVJ/Biggers - 2012 - The effects of identifier retention and stop word .pdf:application/pdf}
}

@inproceedings{guerrouj_tris_2012,
	title = {{TRIS}: {A} fast and accurate identifiers splitting and expansion algorithm},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872297690&doi=10.1109%2fWCRE.2012.20&partnerID=40&md5=cde8887fb5e9ca9bd4f353e3c9bd9ad8},
	doi = {10.1109/WCRE.2012.20},
	abstract = {Understanding source code identifiers, by identifying words composing them, is a necessary step for many program comprehension, reverse engineering, or redocumentation tasks. To this aim, researchers have proposed several identifier splitting and expansion approaches such as Samurai, TIDIER and more recently GenTest. The ultimate goal of such approaches is to help disambiguating conceptual information encoded in compound (or abbreviated) identifiers. This paper presents TRIS, TRee-based Identifier Splitter, a two-phases approach to split and expand program identifiers. First, TRIS pre-compiles transformed dictionary words into a tree representation, associating a cost to each transformation. In a second phase, it maps the identifier splitting/expansion problem into a minimization problem, i.e., the search of the shortest path (optimal split/expansion) in a weighted graph. We apply TRIS to a sample of 974 identifiers extracted from JHotDraw, 3,085 from Lynx, and to a sample of 489 identifiers extracted from 340 C programs. Also, we compare TRIS with GenTest on a set of 2,663 mixed Java, C and C++ identifiers. We report evidence that TRIS split (and expansion) is more accurate than state-of-the-art approaches and that it is also efficient in terms of computation time. © 2012 IEEE.},
	booktitle = {Proceedings - {Working} {Conference} on {Reverse} {Engineering}, {WCRE}},
	author = {Guerrouj, L. and Galinier, P. and Guéhéneuc, Y.-G. and Antoniol, G. and Di Penta, M.},
	year = {2012},
	note = {76},
	pages = {103--112},
	annote = {cited By 4},
	file = {2012_Guerrouj et al_TRIS.pdf:/home/akira/Zotero/storage/XXQU5ZW3/2012_Guerrouj et al_TRIS.pdf:application/pdf}
}

@inproceedings{dit_can_2011-1,
	title = {Can {Better} {Identifier} {Splitting} {Techniques} {Help} {Feature} {Location}?},
	doi = {10.1109/ICPC.2011.47},
	abstract = {The paper presents an exploratory study of two feature location techniques utilizing three strategies for splitting identifiers: Camel Case, Samurai and manual splitting of identifiers. The main research question that we ask in this study is if we had a perfect technique for splitting identifiers, would it still help improve accuracy of feature location techniques applied in different scenarios and settings? In order to answer this research question we investigate two feature location techniques, one based on Information Retrieval and the other one based on the combination of Information Retrieval and dynamic analysis, for locating bugs and features using various configurations of preprocessing strategies on two open-source systems, Rhino and jEdit. The results of an extensive empirical evaluation reveal that feature location techniques using Information Retrieval can benefit from better preprocessing algorithms in some cases, and that their improvement in effectiveness while using manual splitting over state-of-the-art approaches is statistically significant in those cases. However, the results for feature location technique using the combination of Information Retrieval and dynamic analysis do not show any improvement while using manual splitting, indicating that any preprocessing technique will suffice if execution data is available. Overall, our findings outline potential benefits of putting additional research efforts into defining more sophisticated source code preprocessing techniques as they can still be useful in situations where execution information cannot be easily collected.},
	booktitle = {2011 {IEEE} 19th {International} {Conference} on {Program} {Comprehension}},
	author = {Dit, B. and Guerrouj, L. and Poshyvanyk, D. and Antoniol, G.},
	month = jun,
	year = {2011},
	note = {14},
	keywords = {information retrieval, Manuals, Dictionaries, Samurai, Software, dynamic analysis, feature location, identifier splitting algorithms, Algorithm design and analysis, Accuracy, CamelCase, feature location technique, Gold, identifier splitting technique, jEdit, Large scale integration, open source system, preprocessing strategies, Rhino},
	pages = {11--20},
	file = {2011_Dit et al_Can Better Identifier Splitting Techniques Help Feature Location.pdf:/home/akira/Zotero/storage/K35KUHE5/2011_Dit et al_Can Better Identifier Splitting Techniques Help Feature Location.pdf:application/pdf}
}

@inproceedings{henrich_determining_2011,
	title = {Determining immediate constituents of compounds in {GermaNet}},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866877956&partnerID=40&md5=4e50f1d779c887840937a10cea5dcd74},
	abstract = {In order to be able to systematically link compounds in GermaNet to their constituent parts, compound splitting needs to be applied recursively and has to identify the immediate constituents at each level of analysis. Existing tools for compound splitting for German only offer an analysis of all component parts of a compound at once without any grouping of subconstituents. Thus, existing tools for splitting compounds were adapted to overcome this issue. Algorithms combining three heterogeneous kinds of compound splitters are developed to achieve better results. The best overall result with an accuracy of 92.42\% is achieved by a hybrid combined compound splitter that takes into account all knowledge provided by the individual compound splitters, and in addition some domain knowledge about German derivation morphology and compounding.},
	booktitle = {International {Conference} {Recent} {Advances} in {Natural} {Language} {Processing}, {RANLP}},
	author = {Henrich, V. and Hinrichs, E.},
	year = {2011},
	note = {24},
	pages = {420--426},
	annote = {cited By 11},
	file = {Henrich and Hinrichs - 2011 - Determining immediate constituents of compounds in.pdf:/home/akira/Zotero/storage/5LC9LJZ3/Henrich and Hinrichs - 2011 - Determining immediate constituents of compounds in.pdf:application/pdf}
}

@inproceedings{macherey_language-independent_2011,
	address = {Stroudsburg, PA, USA},
	series = {{HLT} '11},
	title = {Language-independent {Compound} {Splitting} with {Morphological} {Operations}},
	copyright = {40},
	isbn = {978-1-932432-87-9},
	url = {http://dl.acm.org/citation.cfm?id=2002472.2002644},
	booktitle = {Proceedings of the 49th {Annual} {Meeting} of the {Association} for {Computational} {Linguistics}: {Human} {Language} {Technologies} - {Volume} 1},
	publisher = {Association for Computational Linguistics},
	author = {Macherey, Klaus and Dai, Andrew M. and Talbot, David and Popat, Ashok C. and Och, Franz},
	year = {2011},
	note = {event-place: Portland, Oregon},
	pages = {1395--1404},
	file = {Macherey et al. - 2011 - Language-independent Compound Splitting with Morph.pdf:/home/akira/Zotero/storage/KBEJ83RS/Macherey et al. - 2011 - Language-independent Compound Splitting with Morph.pdf:application/pdf}
}

@inproceedings{wang_web_2011,
	title = {Web scale {NLP}: {A} case study on {URL} word breaking},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-80052123854&doi=10.1145%2f1963405.1963457&partnerID=40&md5=f0884c46e20c2b2cf89b5c9a1bb92dd2},
	doi = {10.1145/1963405.1963457},
	abstract = {This paper uses the URL word breaking task as an example to elaborate what we identify as crucialin designingstatistical natural language processing (NLP) algorithmsfor Web scale applications: (1) rudimentary multilingual capabilities to cope with the global nature of the Web, (2) multi-style modeling to handle diverse language styles seen in the Web contents, (3) fast adaptation to keep pace with the dynamic changes of the Web, (4) minimal heuristic assumptions for generalizability and robustness, and (5) possibilities of efficient implementations and minimal manual efforts for processing massive amount of data at a reasonable cost. We first show that the state-of-the-art word breaking techniquescan be unified and generalized under the Bayesian minimum risk (BMR) framework that, using a Web scale N-gram, can meet the first three requirements. We discuss how the existing techniques can be viewed asintroducing additional assumptions to the basic BMR framework, and describe a generic yet efficient implementation called word synchronous beam search.Testing the framework and its implementation on a series of large scale experiments reveals the following. First, the language style used to build the modelplays a critical role in the word breaking task, and the most suitable for the URL word breaking task appears to be that ofthe document title where the best performance is obtained. Models created from other language styles, such as from document body, anchor text, and even queries, exhibit varying degrees of mismatch. Although all styles benefit from increasing modeling power which, in our experiments, corresponds tothe use of a higher order N-gram, the gain is most recognizable for the title model. The heuristics proposed by the prior arts do contribute to the word breaking performance for mismatched or less powerful models, but are less effective and, in many cases,lead to poorer performance than the matched model with minimal assumptions. For the matched model based on document titles, an accuracy rate of 97.18\% can already be achieved using simple trigram without any heuristics. Copyright © 2011 by the Association for Computing Machinery, Inc. (ACM).},
	booktitle = {Proceedings of the 20th {International} {Conference} on {World} {Wide} {Web}, {WWW} 2011},
	author = {Wang, K. and Thrasher, C. and Hsu, B.-J.},
	year = {2011},
	note = {84},
	pages = {357--366},
	annote = {cited By 32},
	file = {Wang et al. - 2011 - Web scale NLP A case study on URL word breaking.pdf:/home/akira/Zotero/storage/RIG4JJ95/Wang et al. - 2011 - Web scale NLP A case study on URL word breaking.pdf:application/pdf}
}

@inproceedings{guerrouj_automatic_2010,
	address = {Washington, DC, USA},
	series = {{WCRE} '10},
	title = {Automatic {Derivation} of {Concepts} {Based} on the {Analysis} of {Source} {Code} {Identifiers}},
	isbn = {978-0-7695-4123-5},
	url = {http://dx.doi.org/10.1109/WCRE.2010.45},
	doi = {10.1109/WCRE.2010.45},
	booktitle = {Proceedings of the 2010 17th {Working} {Conference} on {Reverse} {Engineering}},
	publisher = {IEEE Computer Society},
	author = {Guerrouj, Latifa},
	year = {2010},
	note = {11},
	keywords = {Program Comprehension, Linguistic Analysis, Identifier Splitting, Software Quality},
	pages = {301--304},
	annote = { Cited by 4},
	file = {2010_Guerrouj_Automatic Derivation of Concepts Based on the Analysis of Source Code Identifiers.pdf:/home/akira/Zotero/storage/E4Q9KZDC/2010_Guerrouj_Automatic Derivation of Concepts Based on the Analysis of Source Code Identifiers.pdf:application/pdf}
}

@inproceedings{fritzinger_how_2010,
	address = {Stroudsburg, PA, USA},
	series = {{WMT} '10},
	title = {How to {Avoid} {Burning} {Ducks}: {Combining} {Linguistic} {Analysis} and {Corpus} {Statistics} for {German} {Compound} {Processing}},
	isbn = {978-1-932432-71-8},
	url = {http://dl.acm.org/citation.cfm?id=1868850.1868884},
	booktitle = {Proceedings of the {Joint} {Fifth} {Workshop} on {Statistical} {Machine} {Translation} and {MetricsMATR}},
	publisher = {Association for Computational Linguistics},
	author = {Fritzinger, Fabienne and Fraser, Alexander},
	year = {2010},
	note = {event-place: Uppsala, Sweden 38},
	pages = {224--234},
	file = {Fritzinger and Fraser - 2010 - How to Avoid Burning Ducks Combining Linguistic A.pdf:/home/akira/Zotero/storage/7N3M7US2/Fritzinger and Fraser - 2010 - How to Avoid Burning Ducks Combining Linguistic A.pdf:application/pdf}
}

@article{kumar_sanskrit_2010,
	title = {Sanskrit compound processor},
	volume = {6465 LNAI},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78651063736&doi=10.1007%2f978-3-642-17528-2_5&partnerID=40&md5=ba8a099b10cf2e63862a66f42bd24e2f},
	doi = {10.1007/978-3-642-17528-2_5},
	abstract = {Sanskrit is very rich in compound formation. Typically a compound does not code the relation between its components explicitly. To understand the meaning of a compound, it is necessary to identify its components, discover the relations between them and finally generate a paraphrase of the compound. In this paper, we discuss the automatic segmentation and type identification of a compound using simple statistics that results from the manually annotated data. © 2010 Springer-Verlag Berlin Heidelberg.},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	author = {Kumar, A. and Mittal, V. and Kulkarni, A.},
	year = {2010},
	note = {56},
	pages = {57--69},
	annote = {cited By 3},
	file = {2010_Kumar et al_Sanskrit compound processor.pdf:/home/akira/Zotero/storage/7D73P8XH/2010_Kumar et al_Sanskrit compound processor.pdf:application/pdf}
}

@article{zeman_using_2010,
	title = {Using {TectoMT} as a preprocessing tool for phrase-based statistical machine translation},
	volume = {6231 LNAI},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-78049263442&doi=10.1007%2f978-3-642-15760-8_28&partnerID=40&md5=d8df80e3e3bbfd901f36029213a636fe},
	doi = {10.1007/978-3-642-15760-8_28},
	abstract = {We present a systematic comparison of preprocessing techniques for two language pairs: English-Czech and English-Hindi. The two target languages, although both belonging to the Indo-European language family, show significant differences in morphology, syntax and word order. We describe how TectoMT, a successful framework for analysis and generation of language, can be used as preprocessor for a phrase-based MT system.We compare the two language pairs and the optimal sets of source-language transformations applied to them. The following transformations are examples of possible preprocessing steps: lemmatization; retokenization, compound splitting; removing/adding words lacking counterparts in the other language; phrase reordering to resemble the target word order; marking syntactic functions. TectoMT, as well as all other tools and data sets we use, are freely available on the Web. © 2010 Springer-Verlag Berlin Heidelberg.},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	author = {Zeman, D.},
	year = {2010},
	note = {83},
	pages = {216--223},
	annote = {cited By 0},
	file = {2010_Zeman_Using TectoMT as a preprocessing tool for phrase-based statistical machine translation.pdf:/home/akira/Zotero/storage/LGBJMYQH/2010_Zeman_Using TectoMT as a preprocessing tool for phrase-based statistical machine translation.pdf:application/pdf}
}

@inproceedings{khaitan_data-driven_2009,
	address = {New York, NY, USA},
	series = {{CIKM} '09},
	title = {Data-driven {Compound} {Splitting} {Method} for {English} {Compounds} in {Domain} {Names}},
	isbn = {978-1-60558-512-3},
	url = {http://doi.acm.org/10.1145/1645953.1645982},
	doi = {10.1145/1645953.1645982},
	booktitle = {Proceedings of the 18th {ACM} {Conference} on {Information} and {Knowledge} {Management}},
	publisher = {ACM},
	author = {Khaitan, Sanjeet and Das, Arumay and Gain, Sandeep and Sampath, Adithi},
	year = {2009},
	note = {event-place: Hong Kong, China 21},
	keywords = {compound splitting, domain names},
	pages = {207--214},
	file = {Khaitan et al. - 2009 - Data-driven Compound Splitting Method for English .pdf:/home/akira/Zotero/storage/9IF4T54W/Khaitan et al. - 2009 - Data-driven Compound Splitting Method for English .pdf:application/pdf}
}

@inproceedings{enslen_mining_2009,
	title = {Mining source code to automatically split identifiers for software analysis},
	doi = {10.1109/MSR.2009.5069482},
	abstract = {Automated software engineering tools (e.g., program search, concern location, code reuse, quality assessment, etc.) increasingly rely on natural language information from comments and identifiers in code. The first step in analyzing words from identifiers requires splitting identifiers into their constituent words. Unlike natural languages, where space and punctuation are used to delineate words, identifiers cannot contain spaces. One common way to split identifiers is to follow programming language naming conventions. For example, Java programmers often use camel case, where words are delineated by uppercase letters or non-alphabetic characters. However, programmers also create identifiers by concatenating sequences of words together with no discernible delineation, which poses challenges to automatic identifier splitting. In this paper, we present an algorithm to automatically split identifiers into sequences of words by mining word frequencies in source code. With these word frequencies, our identifier splitter uses a scoring technique to automatically select the most appropriate partitioning for an identifier. In an evaluation of over 8000 identifiers from open source Java programs, our Samurai approach outperforms the existing state of the art techniques.},
	booktitle = {2009 6th {IEEE} {International} {Working} {Conference} on {Mining} {Software} {Repositories}},
	author = {Enslen, E. and Hill, E. and Pollock, L. and Vijay-Shanker, K.},
	year = {2009},
	note = {46},
	keywords = {Natural languages, data mining, Java, software maintenance, Software maintenance, program diagnostics, Frequency, automatic split identifier, Information analysis, Open source software, Programming profession, Quality assessment, software analysis, Software quality, Software tools, source code mining, word frequency mining},
	pages = {71--80},
	file = {2009_Enslen et al_Mining source code to automatically split identifiers for software analysis.pdf:/home/akira/Zotero/storage/PVKTE3UL/2009_Enslen et al_Mining source code to automatically split identifiers for software analysis.pdf:application/pdf}
}

@article{braga_algoritmos_2008,
	title = {Algoritmos de processamento da linguagem natural para sistemas de conversao texto-fala em português},
	author = {Braga, Daniela Filipa Macedo Moreira da and {others}},
	year = {2008},
	note = {05},
	file = {2008_Braga_others_Algoritmos de processamento da linguagem natural para sistemas de conversao texto-fala em português.pdf:/home/akira/Zotero/storage/C4KAGR32/2008_Braga_others_Algoritmos de processamento da linguagem natural para sistemas de conversao texto-fala em português.pdf:application/pdf}
}

@inproceedings{stymne_german_2008,
	address = {Berlin, Heidelberg},
	series = {{GoTAL} '08},
	title = {German {Compounds} in {Factored} {Statistical} {Machine} {Translation}},
	isbn = {978-3-540-85286-5},
	url = {http://dx.doi.org/10.1007/978-3-540-85287-2_44},
	doi = {10.1007/978-3-540-85287-2_44},
	booktitle = {Proceedings of the 6th {International} {Conference} on {Advances} in {Natural} {Language} {Processing}},
	publisher = {Springer-Verlag},
	author = {Stymne, Sara},
	year = {2008},
	note = {event-place: Gothenburg, Sweden 34},
	pages = {464--475},
	file = {2008_Stymne_German Compounds in Factored Statistical Machine Translation.pdf:/home/akira/Zotero/storage/X9MBUY4N/German-compounds-in-factored-statistical-machine-translationLecture-Notes-in-Computer-Science-including-subseries-Lecture-Notes-in-Artificial-Intelligence-and-Lecture-Notes-in-Bioinformatics.pdf:application/pdf}
}

@inproceedings{alfonseca_german_2008,
	address = {Berlin, Heidelberg},
	title = {German {Decompounding} in a {Difficult} {Corpus}},
	isbn = {978-3-540-78135-6},
	abstract = {Splitting compound words has proved to be useful in areas such as Machine Translation, Speech Recognition or Information Retrieval (IR). In the case of IR systems, they usually have to cope with noisy data, as user queries are usually written quickly and submitted without review. This work attempts at improving the current approaches for German decompounding when applied to query keywords. The results show an increase of more than 10\% in accuracy compared to other state-of-the-art methods.},
	booktitle = {Computational {Linguistics} and {Intelligent} {Text} {Processing}},
	publisher = {Springer Berlin Heidelberg},
	author = {Alfonseca, Enrique and Bilac, Slaven and Pharies, Stefan},
	editor = {Gelbukh, Alexander},
	year = {2008},
	note = {35},
	pages = {128--139},
	file = {Alfonseca et al. - 2008 - German Decompounding in a Difficult Corpus.pdf:/home/akira/Zotero/storage/233AY5DW/Alfonseca et al. - 2008 - German Decompounding in a Difficult Corpus.pdf:application/pdf}
}

@inproceedings{stymne_processing_2008,
	title = {Processing of {Swedish} compounds for phrase-based statistical machine translation},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857535918&partnerID=40&md5=11ef39e004bb3623703d713985652303},
	abstract = {We investigated the effects of processing Swedish compounds for phrase-based SMT between Swedish and English. Compounds were split in a pre-processing step using an unsupervised empirical method. After translation into Swedish, compounds were merged, using a novel merging algorithm. We investigated two ways of handling compound parts, by marking them as compound parts or by normalizing them to a canonical form. We found that compound splitting did improve translation into Swedish, according to automatic metrics. For translation into English the results were not consistent across automatic metrics. However, error analysis of compound translation showed a small improvement in the systems that used splitting. The number of untranslated words in the English output was reduced by 50\%.},
	booktitle = {Proceedings of the 12th {European} {Association} for {Machine} {Translation} {Conference}, {EAMT} 2008},
	author = {Stymne, S. and Holmqvist, M.},
	year = {2008},
	note = {54},
	pages = {182--191},
	annote = {cited By 6},
	file = {Stymne and Holmqvist - 2008 - Processing of Swedish compounds for phrase-based s.pdf:/home/akira/Zotero/storage/F57RPWWV/Stymne and Holmqvist - 2008 - Processing of Swedish compounds for phrase-based s.pdf:application/pdf}
}

@inproceedings{holz_unsupervised_2008,
	address = {Berlin, Heidelberg},
	series = {{CICLing}'08},
	title = {Unsupervised and {Knowledge}-free {Learning} of {Compound} {Splits} and {Periphrases}},
	isbn = {3-540-78134-X 978-3-540-78134-9},
	url = {http://dl.acm.org/citation.cfm?id=1787578.1787592},
	booktitle = {Proceedings of the 9th {International} {Conference} on {Computational} {Linguistics} and {Intelligent} {Text} {Processing}},
	publisher = {Springer-Verlag},
	author = {Holz, Florian and Biemann, Chris},
	year = {2008},
	note = {event-place: Haifa, Israel 77},
	pages = {117--127},
	file = {Holz and Biemann - 2008 - Unsupervised and Knowledge-free Learning of Compou.pdf:/home/akira/Zotero/storage/6K9L3PNP/Holz and Biemann - 2008 - Unsupervised and Knowledge-free Learning of Compou.pdf:application/pdf}
}

@inproceedings{bordag_unsupervised_2007,
	title = {Unsupervised and knowledge-free morpheme segmentation and analysis},
	volume = {1173},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921960169&partnerID=40&md5=af8fc25f3c4af981dbe962e6e760ad24},
	abstract = {This paper presents a revised version of an unsupervised and knowledge-free morpheme boundary detection algorithm based on letter successor variety (LSV) and a trie classifier [5]. Additionally a morphemic analysis based on contextual similarity provides knowledge about relatedness of the found morphs. For the boundary detection the challenge of increasing recall of found morphs while retaining a high precision is tackled by adding a compound splitter, iterating the LSV analysis and dividing the trie classifier into two distinctly applied clasifiers. The result is a significantly improved overall performance and a decreased reliance on corpus size. Further possible improvements and analyses are discussed.},
	booktitle = {{CEUR} {Workshop} {Proceedings}},
	author = {Bordag, S.},
	year = {2007},
	note = {78},
	annote = {cited By 0}
}

@article{pedersen_using_2007,
	title = {Using shallow linguistic analysis to improve search on {Danish} compounds},
	volume = {13},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-33847289690&doi=10.1017%2fS1351324906004256&partnerID=40&md5=b20e47119434e911c56c063423f9c5b1},
	doi = {10.1017/S1351324906004256},
	abstract = {In this paper we focus on a specific search-related query expansion topic, namely search on Danish compounds and expansion to some of their synonymous phrases. Compounds constitute a specific issue in search, in particular in languages where they are written in one word, as is the case for Danish and the other Scandinavian languages. For such languages, expansion of the query compound into separate lemmas is a way of finding the often frequent alternative synonymous phrases in which the content of a compound can also be expressed. However, it is crucial to note that the number of irrelevant hits is generally very high when using this expansion strategy. The aim of this paper is therefore to examine how we can obtain better search results on split compounds, partly by looking at the internal structure of the original compound, partly by analyzing the context in which the split compound occurs. In this context, we pursue two hypotheses: (1) that some categories of compounds are more likely to have synonymous 'split' counterparts than others; and (2) that search results where both the search words (obtained by splitting the compound) occur in the same noun phrase, are more likely to contain a synonymous phrase to the original compound query. The search results from 410 enhanced compound queries are used as a test bed for our experiments. On these search results, we perform a shallow linguistic analysis and introduce a new, linguistically based threshold for retrieved hits. The results obtained by using this strategy demonstrate that compound splitting combined with a shallow linguistic analysis focusing on the argument structure of the compound head as well as on the recognition of NPs, can improve search by substantially bringing down the number of irrelevant hits. © 2006 Cambridge University Press.},
	number = {1},
	journal = {Natural Language Engineering},
	author = {Pedersen, B.S.},
	year = {2007},
	note = {82},
	pages = {75--90},
	annote = {cited By 0},
	file = {2007_Pedersen_Using shallow linguistic analysis to improve search on Danish compounds.pdf:/home/akira/Zotero/storage/I64LBPLS/2007_Pedersen_Using shallow linguistic analysis to improve search on Danish compounds.pdf:application/pdf}
}

@article{popovic_statistical_2006-1,
	title = {Statistical machine translation of german compound words},
	volume = {4139 LNAI},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-33749674758&partnerID=40&md5=5a2ba01a1897f9b2a062138b3e9f05d3},
	abstract = {German compound words pose special problems to statistical machine translation systems: the occurence of each of the components in the training data is not sufficient for successful translation. Even if the compound itself has been seen during training, the system may not be capable of translating it properly into two or more words. If German is the target language, the system might generate only separated components or may not be capable of choosing the correct compound. In this work, we investigate and compare different strategies for the treatment of German compound words in statistical machine translation systems. For translation from German, we compare linguistic-based and corpusbased compound splitting. For translation into German, we investigate splitting and rejoining German compounds, as well as joining English potential components. Additionaly, we investigate word alignments enhanced with knowledge about the splitting points of German compounds. The translation quality is consistently improved by all methods for both translation directions. © Springer-Verlag Berlin Heidelberg 2006.},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	author = {Popović, M. and Stein, D. and Ney, H.},
	year = {2006},
	note = {70},
	pages = {616--624},
	annote = {cited By 20},
	file = {Popović et al. - 2006 - Statistical machine translation of german compound.pdf:/home/akira/Zotero/storage/VNCE4PST/Popović et al. - 2006 - Statistical machine translation of german compound.pdf:application/pdf}
}

@article{airio_word_2006,
	title = {Word normalization and decompounding in mono- and bilingual {IR}},
	volume = {9},
	issn = {1573-7659},
	url = {https://doi.org/10.1007/s10791-006-0884-2},
	doi = {10.1007/s10791-006-0884-2},
	abstract = {The present research studies the impact of decompounding and two different word normalization methods, stemming and lemmatization, on monolingual and bilingual retrieval. The languages in the monolingual runs are English, Finnish, German and Swedish. The source language of the bilingual runs is English, and the target languages are Finnish, German and Swedish. In the monolingual runs, retrieval in a lemmatized compound index gives almost as good results as retrieval in a decompounded index, but in the bilingual runs differences are found: retrieval in a lemmatized decompounded index performs better than retrieval in a lemmatized compound index. The reason for the poorer performance of indexes without decompounding in bilingual retrieval is the difference between the source language and target languages: phrases are used in English, while compounds are used instead of phrases in Finnish, German and Swedish. No remarkable performance differences could be found between stemming and lemmatization.},
	number = {3},
	journal = {Information Retrieval},
	author = {Airio, Eija},
	month = jun,
	year = {2006},
	note = {86},
	pages = {249--271},
	file = {Airio - 2006 - Word normalization and decompounding in mono- and .pdf:/home/akira/Zotero/storage/VN6RWNQW/Airio - 2006 - Word normalization and decompounding in mono- and .pdf:application/pdf}
}

@article{hedlund_dictionary-based_2004,
	title = {Dictionary-{Based} {Cross}-{Language} {Information} {Retrieval}: {Learning} {Experiences} from {CLEF} 2000–2002},
	volume = {7},
	issn = {1573-7659},
	url = {https://doi.org/10.1023/B:INRT.0000009442.34054.55},
	doi = {10.1023/B:INRT.0000009442.34054.55},
	abstract = {In this study the basic framework and performance analysis results are presented for the three year long development process of the dictionary-based UTACLIR system. The tests expand from bilingual CLIR for three language pairs Swedish, Finnish and German to English, to six language pairs, from English to French, German, Spanish, Italian, Dutch and Finnish, and from bilingual to multilingual. In addition, transitive translation tests are reported. The development process of the UTACLIR query translation system will be regarded from the point of view of a learning process. The contribution of the individual components, the effectiveness of compound handling, proper name matching and structuring of queries are analyzed. The results and the fault analysis have been valuable in the development process. Overall the results indicate that the process is robust and can be extended to other languages. The individual effects of the different components are in general positive. However, performance also depends on the topic set and the number of compounds and proper names in the topic, and to some extent on the source and target language. The dictionaries used affect the performance significantly.},
	number = {1},
	journal = {Information Retrieval},
	author = {Hedlund, Turid and Airio, Eija and Keskustalo, Heikki and Lehtokangas, Raija and Pirkola, Ari and Järvelin, Kalervo},
	month = jan,
	year = {2004},
	note = {25},
	pages = {99--119},
	file = {Hedlund et al. - 2004 - Dictionary-Based Cross-Language Information Retrie.pdf:/home/akira/Zotero/storage/RS5Z25KX/Hedlund et al. - 2004 - Dictionary-Based Cross-Language Information Retrie.pdf:application/pdf}
}

@article{hollink_monolingual_2004,
	title = {Monolingual document retrieval for {European} languages},
	volume = {7},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-3843105784&partnerID=40&md5=f9c951e94a8a59c020fd5a0c4b3bbf46},
	abstract = {Recent years have witnessed considerable advances in information retrieval for European languages other than English. We give an overview of commonly used techniques and we analyze them with respect to their impact on retrieval effectiveness. The techniques considered range from linguistically motivated techniques, such as morphological normalization and compound splitting, to knowledge-free approaches, such as n-gram indexing. Evaluations are carried out against data from the CLEF campaign, covering eight European languages. Our results show that for many of these languages a modicum of linguistic techniques may lead to improvements in retrieval effectiveness, as can the use of language independent techniques.},
	number = {1-2},
	journal = {Information Retrieval},
	author = {Hollink, V. and Kamps, J. and Monz, C. and De Rijke, M.},
	year = {2004},
	note = {47},
	pages = {33--52},
	annote = {cited By 54},
	file = {Hollink et al. - 2004 - Monolingual document retrieval for European langua.pdf:/home/akira/Zotero/storage/MSUD8LUB/Hollink et al. - 2004 - Monolingual document retrieval for European langua.pdf:application/pdf}
}

@article{coster_selective_2004,
	title = {Selective compound splitting of swedish queries for boolean combinations of truncated terms},
	volume = {3237},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-35048871540&partnerID=40&md5=f5b2b1834f7cad7abe59755b8a103d03},
	abstract = {In languages that use compound words such as Swedish, it is often neccessary to split compound words when indexing documents or queries. One of the problems is that it is difficult to find constituents that express a concept similar to that expressed by the compound. The approach taken here is to expand a query with the leading constituents of the compound words. Every query term is truncated so as to increase recall by hopefully finding other compounds with the leading constituent as prefix. This approach increases recall in a rather uncontrolled way, so we use a Boolean quorum-level search method to rank documents both according to a tf-idf factor but also to the number of matching Boolean combinations. The Boolean combinations performed relatively well, taking into consideration that the queries were very short (maximum of five search terms). Also included in this paper are the results of two other methods we are currently working on in our lab; one for re-ranking search results on the basis of stylistic analysis of documents, and one for dimensionality reduction using Random Indexing. © Springer-Verlag 2004.},
	journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
	author = {Cöster, R. and Sahlgren, M. and Karlgren, J.},
	year = {2004},
	note = {59},
	pages = {337--344},
	annote = {cited By 3},
	file = {Cöster et al. - 2004 - Selective compound splitting of swedish queries fo.pdf:/home/akira/Zotero/storage/KV3Q2RSP/Cöster et al. - 2004 - Selective compound splitting of swedish queries fo.pdf:application/pdf}
}

@inproceedings{ordelman_compound_2003,
	title = {Compound decomposition in {Dutch} large vocabulary speech recognition},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-85009170957&partnerID=40&md5=9373eec435a757ed1ac5b17f6d94fcd8},
	abstract = {This paper addresses compound splitting for Dutch in the context of broadcast news transcription. Language models were created using original text versions and text versions that were decomposed using a data-driven compound splitting algorithm. Language model performances were compared in terms of outof- vocabulary rates and word error rates in a real-world broadcast news transcription task. It was concluded that compound splitting does improve ASR performance. Best results were obtained when frequent compounds were not decomposed.},
	booktitle = {{EUROSPEECH} 2003 - 8th {European} {Conference} on {Speech} {Communication} and {Technology}},
	author = {Ordelman, R. and Van Hessen, A. and De Jong, F.},
	year = {2003},
	note = {16},
	pages = {225--228},
	annote = {cited By 23},
	file = {2003_Ordelman et al_Compound decomposition in Dutch large vocabulary speech recognition.pdf:/home/akira/Zotero/storage/NNID7XFS/2003_Ordelman et al_Compound decomposition in Dutch large vocabulary speech recognition.pdf:application/pdf}
}

@article{libben_compound_2003,
	title = {Compound fracture: {The} role of semantic transparency and morphological headedness},
	volume = {84},
	issn = {0093-934X},
	url = {http://www.sciencedirect.com/science/article/pii/S0093934X02005205},
	doi = {https://doi.org/10.1016/S0093-934X(02)00520-5},
	abstract = {This paper explores the role of semantic transparency in the representation and processing of English compounds. We focus on the question of whether semantic transparency is best viewed as a property of the entire multimorphemic string or as a property of constituent morphemes. Accordingly, we investigated the processing of English compound nouns that were categorized in terms of the semantic transparency of each of their constituents. Fully transparent such as bedroom are those in which the meanings of each of the constituents are transparently represented in the meaning of the compound as a whole. These compounds were contrasted with compounds such as strawberry, in which only the second constituent is semantically transparent, jailbird, in which only the first constituent is transparent, and hogwash, in which neither constituent is semantically transparent. We propose that significant insights can be achieved through such analysis of the transparency of individual morphemes. The two experiments that we report present evidence that both semantically transparent compounds and semantically opaque compounds show morphological constituency. The semantic transparency of the morphological head (the second constituent in a morphologically right-headed language such as English) was found to play a significant role in overall lexical decision latencies, in patterns of decomposition, and in the effects of stimulus repetition within the experiment.},
	number = {1},
	journal = {Brain and Language},
	author = {Libben, Gary and Gibson, Martha and Yoon, Yeo Bom and Sandra, Dominiek},
	year = {2003},
	note = {17},
	pages = {50 -- 64},
	annote = {Brain and Language Special Issue},
	file = {2003_Libben et al_Compound fracture.pdf:/home/akira/Zotero/storage/QZDR5734/2003_Libben et al_Compound fracture.pdf:application/pdf}
}

@inproceedings{koehn_empirical_2003,
	address = {Stroudsburg, PA, USA},
	series = {{EACL} '03},
	title = {Empirical {Methods} for {Compound} {Splitting}},
	isbn = {1-333-56789-0},
	url = {https://doi.org/10.3115/1067807.1067833},
	doi = {10.3115/1067807.1067833},
	booktitle = {Proceedings of the {Tenth} {Conference} on {European} {Chapter} of the {Association} for {Computational} {Linguistics} - {Volume} 1},
	publisher = {Association for Computational Linguistics},
	author = {Koehn, Philipp and Knight, Kevin},
	year = {2003},
	note = {event-place: Budapest, Hungary 28},
	pages = {187--193},
	file = {Koehn and Knight - 2003 - Empirical Methods for Compound Splitting.pdf:/home/akira/Zotero/storage/X53YTB2J/Koehn and Knight - 2003 - Empirical Methods for Compound Splitting.pdf:application/pdf}
}

@article{hedlund_aspects_2001-1,
	title = {Aspects of {Swedish} {Morphology} and {Semantics} from the {Perspective} of {Mono}- and {Cross}-{Language} {Information} {Retrieval}},
	volume = {37},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-0035152106&doi=10.1016%2fS0306-4573%2800%2900024-8&partnerID=40&md5=7a27a4aaed911888c61fa3e179606b73},
	doi = {10.1016/S0306-4573(00)00024-8},
	abstract = {This paper analyzes the features of the Swedish language from the viewpoint of mono- and cross-language information retrieval (CLIR). The study was motivated by the fact that Swedish is known poorly from the IR perspective. This paper shows that Swedish has unique features, in particular gender features, the use of fogemorphemes in the formation of compound words, and a high frequency of homographic words. Especially in dictionary-based CLIR, correct word normalization and compound splitting are essential. It was shown in this study, however, that publicly available morphological analysis tools used for normalization and compound splitting have pitfalls that might decrease the effectiveness of IR and CLIR. A comparative study was performed to test the degree of lexical ambiguity in Swedish, Finnish and English. The results suggest that part-of-speech tagging might be useful in Swedish IR due to the high frequency of homographic words.},
	number = {1},
	journal = {Information Processing and Management},
	author = {Hedlund, T. and Pirkola, A. and Järvelin, K.},
	year = {2001},
	note = {09},
	pages = {147--161},
	annote = {cited By 30},
	file = {Hedlund et al. - 2001 - Aspects of Swedish Morphology and Semantics from t.pdf:/home/akira/Zotero/storage/QHHH9KGW/Hedlund et al. - 2001 - Aspects of Swedish Morphology and Semantics from t.pdf:application/pdf}
}

@inproceedings{hedlund_bilingual_2001,
	address = {Berlin, Heidelberg},
	title = {Bilingual {Tests} with {Swedish}, {Finnish}, and {German} {Queries}: {Dealing} with {Morphology}, {Compound} {Words}, and {Query} {Structure}},
	isbn = {978-3-540-44645-3},
	abstract = {We designed, implemented and evaluated an automated method for query construction for CLIR from Finnish, Swedish and German to English. This method seeks to automatically extract topical information from request sentences written in one of the source languages and to create a target language query, based on translations given by a translation dictionary. We paid particular attention to morphology, compound words and query structure. we tested this approach in the bilingual track of CLEF. All the source languages are compound languages, i.e., languages rich in compound words. A compound word refers to a multi-word expression where the component words are written together. Because source language request words may appear in various inflected forms not included in a translation dictionary, morphological normalization was used to aid dictionary translation. The query resulting from this process may be structured according to the translation alternatives of each source language word or remain as an unstructured word list.},
	booktitle = {Cross-{Language} {Information} {Retrieval} and {Evaluation}},
	publisher = {Springer Berlin Heidelberg},
	author = {Hedlund, Turid and Keskustalo, Heikki and Pirkola, Ari and Sepponen, Mikko and Järvelin, Kalervo},
	editor = {Peters, Carol},
	year = {2001},
	note = {13},
	pages = {210--223},
	annote = { Citado por 24},
	file = {2001_Hedlund et al_Bilingual Tests with Swedish, Finnish, and German Queries.pdf:/home/akira/Zotero/storage/IQMIVI8I/2001_Hedlund et al_Bilingual Tests with Swedish, Finnish, and German Queries.pdf:application/pdf}
}

@book{greghi_o_2001,
	title = {O {Processo} de {Desenvolvimento} da {BDL}-{NILC}},
	publisher = {Série de Relatórios do NILC, NILC-TR-01-7. São Carlos, Outubro, 57p},
	author = {Greghi, Juliana Galvani and Martins, Ronaldo Teixeira and Nunes, Maria das Graças Volpe},
	year = {2001},
	note = {50},
	file = {Greghi et al. - 2001 - O Processo de Desenvolvimento da BDL-NILC.pdf:/home/akira/Zotero/storage/ZYPZUH9J/Greghi et al. - 2001 - O Processo de Desenvolvimento da BDL-NILC.pdf:application/pdf}
}

@article{ranchhod_o_2001,
	title = {O uso de dicionários e de autómatos finitos na representação lexical das línguas naturais},
	journal = {Tratamento das Línguas por Computador. Uma Introdução à Linguística Computacional e suas Aplicações},
	author = {Ranchhod, Elisabete Marques},
	year = {2001},
	note = {51},
	pages = {13--47},
	file = {Ranchhod - 2001 - O uso de dicionários e de autómatos finitos na rep.PDF:/home/akira/Zotero/storage/K89MX9EH/Ranchhod - 2001 - O uso de dicionários e de autómatos finitos na rep.PDF:application/pdf}
}

@inproceedings{monz_university_2001,
	title = {The university of {Amsterdam} at {CLEF} 2001},
	volume = {1167},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921953688&partnerID=40&md5=85d483b1ce4dbd8f4a9881095044adb8},
	abstract = {This paper describes the official runs of our team for CLEF-2001. We took part in the monolingual task, for Dutch, German, and Italian. The focus of our experiments was on the effects of morphological analyses such as stemming and compound splitting on retrieval effectiveness. Confirming earlier reports on retrieval in compound splitting languages such as Dutch and German, we found improvements to be around 25\% for German and as much as 55\% for Dutch. For Italian, lexicon-based stemming resulted in gains of up to 25\%. Copyright © 2001 for the individual papers by the papers' authors.},
	booktitle = {{CEUR} {Workshop} {Proceedings}},
	author = {Monz, C. and De Rijke, M.},
	year = {2001},
	note = {73},
	annote = {cited By 1},
	file = {Monz and De Rijke - 2001 - The university of Amsterdam at CLEF 2001.pdf:/home/akira/Zotero/storage/LUUWZEM5/Monz and De Rijke - 2001 - The university of Amsterdam at CLEF 2001.pdf:application/pdf}
}

@inproceedings{kraaij_comparing_1998,
	address = {London, UK, UK},
	series = {{ECDL} '98},
	title = {Comparing the {Effect} of {Syntactic} vs. {Statistical} {Phrase} {Indexing} {Strategies} for {Dutch}},
	isbn = {3-540-65101-2},
	url = {http://dl.acm.org/citation.cfm?id=646631.696685},
	booktitle = {Proceedings of the {Second} {European} {Conference} on {Research} and {Advanced} {Technology} for {Digital} {Libraries}},
	publisher = {Springer-Verlag},
	author = {Kraaij, Wessel and Pohlmann, Renée},
	year = {1998},
	note = {15},
	pages = {605--617},
	file = {1998_Kraaij_Pohlmann_Comparing the Effect of Syntactic vs.pdf:/home/akira/Zotero/storage/CWSNUTKG/1998_Kraaij_Pohlmann_Comparing the Effect of Syntactic vs.pdf:application/pdf}
}

@article{pecina_adaptation_2014-1,
	title = {Adaptation of {Machine} {Translation} for {Multilingual} {Information} {Retrieval} in the {Medical} {Domain}},
	volume = {61},
	issn = {0933-3657},
	url = {http://dx.doi.org/10.1016/j.artmed.2014.01.004},
	doi = {10.1016/j.artmed.2014.01.004},
	number = {3},
	journal = {Artif. Intell. Med.},
	author = {Pecina, Pavel and Dušek, Ondřej and Goeuriot, Lorraine and Hajič, Jan and Hlaváčová, Jaroslava and Jones, Gareth J. F. and Kelly, Liadh and Leveling, Johannes and Mareček, David and Novák, Michal and Popel, Martin and Rosa, Rudolf and Tamchyna, Aleš and Urešová, Zdeňka},
	month = jul,
	year = {2014},
	note = {04},
	keywords = {Compound splitting, Cross-language information retrieval, Domain adaptation of statistical machine translation, Intelligent training data selection for machine translation, Medical query translation, Statistical machine translation},
	pages = {165--185},
	file = {2014_Pecina et al_Adaptation of Machine Translation for Multilingual Information Retrieval in the Medical Domain2.pdf:/home/akira/Zotero/storage/US4BVHRF/2014_Pecina et al_Adaptation of Machine Translation for Multilingual Information Retrieval in the Medical Domain2.pdf:application/pdf}
}

@inproceedings{binkley_dataset_2013,
	title = {A dataset for evaluating identifier splitters},
	url = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889056852&doi=10.1109%2fMSR.2013.6624055&partnerID=40&md5=20c554dc45e942680416227bea5a5bdf},
	doi = {10.1109/MSR.2013.6624055},
	abstract = {Software engineering and evolution techniques have recently started to exploit the natural language information in source code. A key step in doing so is splitting identifiers into their constituent words. While simple in concept, identifier splitting raises several challenging issues, leading to a range of splitting techniques. Consequently, the research community would benefit from a dataset (i.e., a gold set) that facilitates comparative studies of identifier splitting techniques. A gold set of 2,663 split identifiers was constructed from 8,522 individual human splitting judgements and can be obtained from www.cs.loyola.edu/∼binkley/ludiso. This set's construction and observations aimed at its effective use are described. © 2013 IEEE.},
	booktitle = {{IEEE} {International} {Working} {Conference} on {Mining} {Software} {Repositories}},
	author = {Binkley, D. and Lawrie, D. and Pollock, L. and Hill, E. and Vijay-Shanker, K.},
	year = {2013},
	note = {02},
	pages = {401--404},
	annote = {cited By 6},
	file = {2013_Binkley et al_A dataset for evaluating identifier splitters.pdf:/home/akira/Zotero/storage/98KGJGBE/2013_Binkley et al_A dataset for evaluating identifier splitters.pdf:application/pdf}
}